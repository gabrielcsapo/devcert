"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const node_fetch_1 = require("node-fetch");
/**
 * Returns the remote box's certificate
 * @param hostname - hostname of the remote machine
 * @param port - port to connect the remote machine
 */
async function getRemoteCertificate(hostname, port) {
    const response = await node_fetch_1.default(`http://${hostname}:${port}/getRemoteCertificate`);
    return await response.text();
}
exports.getRemoteCertificate = getRemoteCertificate;
/**
 * Closes the remote server
 * @param hostname - hostname of the remote machine
 * @param port - port to connect the remote machine
 */
async function closeRemoteServer(hostname, port) {
    try {
        const response = await node_fetch_1.default(`http://${hostname}:${port}/closeRemoteServer`);
        return await response.text();
    }
    catch (err) {
        throw new Error(err);
    }
}
exports.closeRemoteServer = closeRemoteServer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3RlLXV0aWxzLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvcmVtb3RlLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkNBQStCO0FBRS9COzs7O0dBSUc7QUFDSSxLQUFLLFVBQVUsb0JBQW9CLENBQ3hDLFFBQWdCLEVBQ2hCLElBQVk7SUFFWixNQUFNLFFBQVEsR0FBRyxNQUFNLG9CQUFLLENBQzFCLFVBQVUsUUFBUSxJQUFJLElBQUksdUJBQXVCLENBQ2xELENBQUM7SUFDRixPQUFPLE1BQU0sUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQy9CLENBQUM7QUFSRCxvREFRQztBQUVEOzs7O0dBSUc7QUFDSSxLQUFLLFVBQVUsaUJBQWlCLENBQ3JDLFFBQWdCLEVBQ2hCLElBQVk7SUFFWixJQUFJO1FBQ0YsTUFBTSxRQUFRLEdBQUcsTUFBTSxvQkFBSyxDQUMxQixVQUFVLFFBQVEsSUFBSSxJQUFJLG9CQUFvQixDQUMvQyxDQUFDO1FBQ0YsT0FBTyxNQUFNLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztLQUM5QjtJQUFDLE9BQU8sR0FBRyxFQUFFO1FBQ1osTUFBTSxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUN0QjtBQUNILENBQUM7QUFaRCw4Q0FZQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmZXRjaCBmcm9tICdub2RlLWZldGNoJztcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSByZW1vdGUgYm94J3MgY2VydGlmaWNhdGVcbiAqIEBwYXJhbSBob3N0bmFtZSAtIGhvc3RuYW1lIG9mIHRoZSByZW1vdGUgbWFjaGluZVxuICogQHBhcmFtIHBvcnQgLSBwb3J0IHRvIGNvbm5lY3QgdGhlIHJlbW90ZSBtYWNoaW5lXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRSZW1vdGVDZXJ0aWZpY2F0ZShcbiAgaG9zdG5hbWU6IHN0cmluZyxcbiAgcG9ydDogbnVtYmVyXG4pOiBQcm9taXNlPHN0cmluZz4ge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFxuICAgIGBodHRwOi8vJHtob3N0bmFtZX06JHtwb3J0fS9nZXRSZW1vdGVDZXJ0aWZpY2F0ZWBcbiAgKTtcbiAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbn1cblxuLyoqXG4gKiBDbG9zZXMgdGhlIHJlbW90ZSBzZXJ2ZXJcbiAqIEBwYXJhbSBob3N0bmFtZSAtIGhvc3RuYW1lIG9mIHRoZSByZW1vdGUgbWFjaGluZVxuICogQHBhcmFtIHBvcnQgLSBwb3J0IHRvIGNvbm5lY3QgdGhlIHJlbW90ZSBtYWNoaW5lXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjbG9zZVJlbW90ZVNlcnZlcihcbiAgaG9zdG5hbWU6IHN0cmluZyxcbiAgcG9ydDogbnVtYmVyXG4pOiBQcm9taXNlPHN0cmluZz4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXG4gICAgICBgaHR0cDovLyR7aG9zdG5hbWV9OiR7cG9ydH0vY2xvc2VSZW1vdGVTZXJ2ZXJgXG4gICAgKTtcbiAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoZXJyKTtcbiAgfVxufVxuIl19